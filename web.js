// Generated by CoffeeScript 1.7.1
(function() {
  var ErrorResponse, MimeType, RootPath, fs, http, path, serveFile, serveGzFile, server, zlib;

  fs = require('fs');

  path = require('path');

  http = require('http');

  zlib = require('zlib');

  MimeType = {
    html: 'text/html',
    js: 'text/javascript',
    css: 'text/css',
    csv: 'text/csv'
  };

  ErrorResponse = {
    EACCES: [403, 'Forbidden'],
    ENOENT: [404, 'Not Found'],
    DEFAULT: [500, 'Internal server error']
  };

  RootPath = 'public';

  serveFile = function(res, url, mime) {
    var stream;
    stream = fs.createReadStream(url);
    stream.on('error', function(err) {
      var errRes;
      errRes = ErrorResponse[err.code] || ErrorResponse.DEFAULT;
      res.writeHead(errRes[0], {
        'Content-Type': 'text/plain'
      });
      res.end("" + errRes[0] + " " + errRes[1]);
    });
    res.writeHead(200, {
      'Content-Type': mime
    });
    stream.pipe(res);
  };

  serveGzFile = function(res, url, gzipSupported) {
    var headers, mime, stream;
    mime = MimeType[path.extname(url).substr(1)] || 'text/plain';
    url = RootPath + url;
    stream = fs.createReadStream(url + '.gz');
    stream.on('error', function(err) {
      serveFile(res, url, mime);
    });
    headers = {
      'Content-Type': mime
    };
    if (gzipSupported) {
      headers['Content-Encoding'] = 'gzip';
      res.writeHead(200, headers);
      stream.pipe(res);
    } else {
      res.writeHead(headers);
      stream.pipe(zlib.createUnzip()).pipe(res);
    }
  };

  server = http.createServer(function(request, res) {
    var enc, url;
    url = request.url;
    if (url === '/') {
      url = '/index.html';
    }
    enc = request.headers['accept-encoding'];
    serveGzFile(res, url, (enc != null) && enc.indexOf('gzip') !== -1);
  });

  server.listen(Number(process.env.PORT || 8888));

}).call(this);
